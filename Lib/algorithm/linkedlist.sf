import iter

class LinkedList
    val = None
    next = None
    _iter_count = 0
    len = 1
    llist = [0]
    _last_node = None

    fun __main__(self, val = None, next = None)
        self.val = val
        self.next = next
        self.llist = [self.val]
    
    fun add(self, val)
        self.llist.push(val)
        self.len = self.len + 1
        if self._last_node == None
            self.next = LinkedList(val)
            self._last_node = self.next
        else
            self._last_node.next = LinkedList(val)
            self._last_node = self._last_node.next
    
    fun height(self)
        return self.len
    
    fun __iter__(self)
        curr_val = self._iter_count
        self._iter_count = self._iter_count + 1
        if self._iter_count > self.height()
            self._iter_count = 0
            return None
        v = self.llist[curr_val]
        return iter(v)


    fun __str__(self)
        return [self.val, self.next]
    
    __stdout__ = __str__