# Converts String to Sunflower dictionary
from std.string import *
from std import float

class Decoder
    fun __main__(self)
        return None
    
    fun decode(self, s)
        s = s[1 to len(s) - 1]
        s = s.split(',')
        d = {}
        s = [x.split(':') for x in s][0]
        for i in s
            i[0] = i[0].strip()
            assert i[0][0] == '"' and i[0][len(i[0]) - 1] == '"', '[json] Syntax Error'
            i[0] = i[0][1 to len(i[0]) - 1]
            i[1] = i[1].strip()
            val = None
            switch i[1]
                case 'true'
                    val = True
                case 'false'
                    val = False
                case 'null'
                    val = None
                case in ['[', '{']
                    val = self.decode(i[1])
                case .startswith('"')
                    val = i[1][1 to len(i[1]) - 1]
                case .isnumber()
                    val = int(i[1])
                case .isfloat()
                    val = float(i[1])
                default
                    assert False, 'Invalid value: ' + i[1]
            d[i[0]] = val
        return d